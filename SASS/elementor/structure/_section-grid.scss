/**
 * Standard column gutter and layout
 */
.elementor-section-full_width {

  .elementor-column-wrap {
    height: 100%;
  }
  // On mobile, the widget centers itself vertically
  // to accomodate a possible extended min height
  .elementor-widget-wrap {
    justify-content: center;

    @include breakpoint-min(lg) {
      justify-content: inherit;
    }
  }

  // On mobile Min height for empty columns with just a bg image
  .elementor-row > .column--mob-height .elementor-element-populated {
    padding-bottom: 100%;

    @include breakpoint-min(md) {
      padding-bottom: 50%;
    }
    @include breakpoint-min(lg) {
      padding-bottom: inherit;
    }
  }
}

.column--force-right {
  .elementor-column-wrap {
    @include layout-padding($xl: 0, $lg: 0);
    @include breakpoint-min(lg) {
      max-width: $website-width / 2;
      margin-left: auto;
      margin-right: 0;
    }


    // remove the layout padding
    @include breakpoint-min(xl) {
      padding-left: 0;
    }
  }
}

.column--force-left {
  .elementor-column-wrap {
    @include layout-padding($xl: 0, $lg: 0);
    @include breakpoint-min(lg) {
      max-width: $website-width / 2;
      margin-right: auto;
      margin-left: 0;
    }


    // remove the layout padding
    @include breakpoint-min(xl) {
      padding-right: 0;
    }
  }
}

@each $palette, $color in $palettes {
  .elementor-column.color--#{$palette} {
    @include pad($v: $l_v_md);
  }
}


.section--grid {

  .elementor-column {
    @include grid_pad();
    @include pad($v: $l_v_md);
  }

  .elementor-column-gap-narrow .elementor-column {
    @include pad($v: $l_v_xs);
  }
  .elementor-column-gap-extended .elementor-column {
    @include pad($v: $l_v_sm);
  }
  .elementor-column-gap-narrow .elementor-column {
    @include pad($v: $l_v_xs);
  }
  .elementor-column-gap-wide .elementor-column {
    @include pad($v: $l_v_lg);
  }
  .elementor-column-gap-wider .elementor-column {
    @include pad($v: $l_v_xl);
  }
}
